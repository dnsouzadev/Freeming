{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Streaming/freeming/src/App.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport Footer from './components/Footer';\nimport MovieCard from './components/MovieCard';\nimport Navbar from './components/Navbar';\nimport SearchBar from './components/SearchBar';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 1. MUDANÇA: Alterado de 'movie' para 'movies' e o estado inicial é um array vazio.\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searched, setSearched] = useState(false);\n\n  // 2. MUDANÇA: A função de busca agora está preparada para a nova estrutura da API.\n  const handleSearch = useCallback(async query => {\n    setIsLoading(true);\n    setError('');\n    setSearched(true);\n    setMovies([]); // Limpa os resultados anteriores\n\n    // Coloque a URL da sua API real aqui\n    const searchUrl = `https://localhost:8000/watch/search/${encodeURIComponent(query)}`;\n    try {\n      // Usaremos um mock para demonstrar, mas você deve usar fetch com sua URL real\n      // const response = await fetch(searchUrl);\n      // if (!response.ok) throw new Error('Falha na resposta da API');\n      // const data = await response.json();\n\n      // ---- SIMULAÇÃO DA SUA API REAL ----\n      // Simula a resposta que você mostrou: {\"0\": {filme}, \"1\": {outro_filme}}\n      const mockApiResponse = new Promise(resolve => {\n        setTimeout(() => {\n          if (query.toLowerCase().includes('jogo')) {\n            resolve({\n              \"0\": {\n                \"embed_url\": \"https://vidsrc.xyz/embed/movie?tmdb=9029\",\n                \"id\": 9029,\n                \"title\": \"Jogo de Amor em Las Vegas\",\n                \"poster_url\": \"https://image.tmdb.org/t/p/w500/wPfCkAZjxcgbCN7X65Aut8Vtq4c.jpg\",\n                \"description\": \"Depois da noite mais insana de suas vidas em Las Vegas...\",\n                \"release_date\": \"2008-05-07\"\n              }\n            });\n          } else {\n            resolve({}); // Retorna objeto vazio se não encontrar\n          }\n        }, 800);\n      });\n      const data = await mockApiResponse;\n      // ---- FIM DA SIMULAÇÃO ----\n\n      // **A MÁGICA ACONTECE AQUI!**\n      // Object.values() pega todos os valores do objeto (os filmes)\n      // e os transforma em um array.\n      // {\"0\": {filmeA}} se torna [{filmeA}]\n      const results = Object.values(data);\n      if (results.length > 0) {\n        setMovies(results); // Armazena o array de filmes encontrados\n      } else {\n        setMovies([]); // Garante que a lista está vazia se nada for encontrado\n      }\n    } catch (err) {\n      setError('Ocorreu um erro ao buscar o filme. Tente novamente.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message\",\n          children: \"Carregando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), !isLoading && !error && searched && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message\",\n          children: \"Nenhum filme encontrado com esse nome.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), !isLoading && !error && !searched && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message\",\n          children: \"Comece buscando por um filme no campo acima.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-grid\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l/O17Qmg/f54YNk1ijgXQB6jUEo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useState","Footer","MovieCard","Navbar","SearchBar","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","searched","setSearched","handleSearch","query","searchUrl","encodeURIComponent","mockApiResponse","Promise","resolve","setTimeout","toLowerCase","includes","data","results","Object","values","length","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","map","movie","id","_c","$RefreshReg$"],"sources":["/home/daniel/Documents/Streaming/freeming/src/App.js"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport Footer from './components/Footer';\nimport MovieCard from './components/MovieCard';\nimport Navbar from './components/Navbar';\nimport SearchBar from './components/SearchBar';\nimport './styles/App.css';\n\nfunction App() {\n  // 1. MUDANÇA: Alterado de 'movie' para 'movies' e o estado inicial é um array vazio.\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searched, setSearched] = useState(false);\n\n  // 2. MUDANÇA: A função de busca agora está preparada para a nova estrutura da API.\n  const handleSearch = useCallback(async (query) => {\n    setIsLoading(true);\n    setError('');\n    setSearched(true);\n    setMovies([]); // Limpa os resultados anteriores\n\n    // Coloque a URL da sua API real aqui\n    const searchUrl = `https://localhost:8000/watch/search/${encodeURIComponent(query)}`;\n\n    try {\n      // Usaremos um mock para demonstrar, mas você deve usar fetch com sua URL real\n      // const response = await fetch(searchUrl);\n      // if (!response.ok) throw new Error('Falha na resposta da API');\n      // const data = await response.json();\n\n      // ---- SIMULAÇÃO DA SUA API REAL ----\n      // Simula a resposta que você mostrou: {\"0\": {filme}, \"1\": {outro_filme}}\n      const mockApiResponse = new Promise(resolve => {\n        setTimeout(() => {\n          if (query.toLowerCase().includes('jogo')) {\n            resolve({\n              \"0\": {\n                \"embed_url\":\"https://vidsrc.xyz/embed/movie?tmdb=9029\",\n                \"id\":9029,\n                \"title\":\"Jogo de Amor em Las Vegas\",\n                \"poster_url\":\"https://image.tmdb.org/t/p/w500/wPfCkAZjxcgbCN7X65Aut8Vtq4c.jpg\",\n                \"description\":\"Depois da noite mais insana de suas vidas em Las Vegas...\",\n                \"release_date\":\"2008-05-07\"\n              }\n            });\n          } else {\n            resolve({}); // Retorna objeto vazio se não encontrar\n          }\n        }, 800);\n      });\n      const data = await mockApiResponse;\n      // ---- FIM DA SIMULAÇÃO ----\n\n\n      // **A MÁGICA ACONTECE AQUI!**\n      // Object.values() pega todos os valores do objeto (os filmes)\n      // e os transforma em um array.\n      // {\"0\": {filmeA}} se torna [{filmeA}]\n      const results = Object.values(data);\n\n      if (results.length > 0) {\n        setMovies(results); // Armazena o array de filmes encontrados\n      } else {\n        setMovies([]); // Garante que a lista está vazia se nada for encontrado\n      }\n    } catch (err) {\n      setError('Ocorreu um erro ao buscar o filme. Tente novamente.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main className=\"main-content\">\n        <SearchBar onSearch={handleSearch} />\n\n        {/* 3. MUDANÇA: A lógica de renderização agora lida com um array de filmes */}\n        <div className=\"results-container\">\n          {isLoading && <p className=\"status-message\">Carregando...</p>}\n          {error && <p className=\"status-message error\">{error}</p>}\n\n          {!isLoading && !error && searched && movies.length === 0 && (\n            <p className=\"status-message\">Nenhum filme encontrado com esse nome.</p>\n          )}\n\n          {!isLoading && !error && !searched && (\n             <p className=\"status-message\">Comece buscando por um filme no campo acima.</p>\n          )}\n\n          {/* Adicionamos um container com a classe 'movie-grid' para o layout */}\n          <div className=\"movie-grid\">\n            {movies.map((movie) => (\n              <MovieCard key={movie.id} movie={movie} />\n            ))}\n          </div>\n\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}