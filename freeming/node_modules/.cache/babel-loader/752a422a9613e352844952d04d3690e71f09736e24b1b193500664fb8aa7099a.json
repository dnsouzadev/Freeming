{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Streaming/freeming/src/App.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport MovieCard from './components/MovieCard';\nimport Navbar from './components/Navbar';\nimport SearchBar from './components/SearchBar';\n\n// --- SIMULAÇÃO DA API ---\n// Os dados que você forneceu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleMovieData = {\n  \"embed_url\": \"https://vidsrc.xyz/embed/movie?tmdb=9029\",\n  \"id\": 9029,\n  \"title\": \"Jogo de Amor em Las Vegas\",\n  \"poster_url\": \"https://image.tmdb.org/t/p/w500/wPfCkAZjxcgbCN7X65Aut8Vtq4c.jpg\",\n  \"description\": \"Depois da noite mais insana de suas vidas em Las Vegas, dois estranhos sem nada em comum, Jack e Joy, acordam e descobrem que não apenas se divertiram, eles também estão casados! Mas a anulação não vai ser algo tão fácil, pois Jack ganha um prêmio de US$ 3 milhões de dólares apostando com uma moeda de Joy, e um juiz irritado sentencia o casal a seis meses de \\\"casamento para valer\\\" antes de dividir o dinheiro.\",\n  \"release_date\": \"2008-05-07\"\n};\n\n// Esta função simula uma chamada de API.\n// Ela retorna o filme de exemplo se a busca incluir \"jogo\".\nconst mockApiSearch = query => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      // Simula o atraso da rede\n      if (query.toLowerCase().includes('jogo')) {\n        resolve([sampleMovieData]); // API de busca geralmente retorna um array\n      } else {\n        resolve([]); // Retorna array vazio se não encontrar\n      }\n    }, 1000); // Atraso de 1 segundo\n  });\n};\n// --- FIM DA SIMULAÇÃO ---\n\nfunction App() {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searched, setSearched] = useState(false); // Para saber se uma busca já foi feita\n\n  const handleSearch = useCallback(async query => {\n    setIsLoading(true);\n    setError('');\n    setSearched(true);\n    setMovie(null);\n\n    // Constrói a URL da sua API de busca\n    const searchUrl = `https://sua-api.com/search?name=${encodeURIComponent(query)}`;\n    try {\n      const response = await fetch(searchUrl);\n      if (!response.ok) {\n        throw new Error('A resposta da rede não foi boa');\n      }\n      const data = await response.json();\n\n      // MUITO IMPORTANTE: Adapte essa linha para a estrutura da sua resposta.\n      // Se a API retornar um array, você pode pegar o primeiro item.\n      // Se retornar um objeto direto, pode ser apenas 'data'.\n      const results = data.results || (Array.isArray(data) ? data : [data]);\n      if (results.length > 0) {\n        setMovie(results[0]);\n      } else {\n        setMovie(null);\n      }\n    } catch (err) {\n      setError('Ocorreu um erro ao buscar o filme. Tente novamente.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-container\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message\",\n          children: \"Carregando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), !isLoading && !error && searched && !movie && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message\",\n          children: \"Nenhum filme encontrado com esse nome.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), !isLoading && !error && !searched && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message\",\n          children: \"Comece buscando por um filme no campo acima. Tente \\\"Jogo de Amor em Las Vegas\\\"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }, this), movie && /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MzisMqspRZbPNS+c4vpHriIaI4I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useState","Footer","MovieCard","Navbar","SearchBar","jsxDEV","_jsxDEV","sampleMovieData","mockApiSearch","query","Promise","resolve","setTimeout","toLowerCase","includes","App","_s","movie","setMovie","isLoading","setIsLoading","error","setError","searched","setSearched","handleSearch","searchUrl","encodeURIComponent","response","fetch","ok","Error","data","json","results","Array","isArray","length","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/home/daniel/Documents/Streaming/freeming/src/App.js"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport MovieCard from './components/MovieCard';\nimport Navbar from './components/Navbar';\nimport SearchBar from './components/SearchBar';\n\n// --- SIMULAÇÃO DA API ---\n// Os dados que você forneceu\nconst sampleMovieData = {\n  \"embed_url\": \"https://vidsrc.xyz/embed/movie?tmdb=9029\",\n  \"id\": 9029,\n  \"title\": \"Jogo de Amor em Las Vegas\",\n  \"poster_url\": \"https://image.tmdb.org/t/p/w500/wPfCkAZjxcgbCN7X65Aut8Vtq4c.jpg\",\n  \"description\": \"Depois da noite mais insana de suas vidas em Las Vegas, dois estranhos sem nada em comum, Jack e Joy, acordam e descobrem que não apenas se divertiram, eles também estão casados! Mas a anulação não vai ser algo tão fácil, pois Jack ganha um prêmio de US$ 3 milhões de dólares apostando com uma moeda de Joy, e um juiz irritado sentencia o casal a seis meses de \\\"casamento para valer\\\" antes de dividir o dinheiro.\",\n  \"release_date\": \"2008-05-07\"\n};\n\n// Esta função simula uma chamada de API.\n// Ela retorna o filme de exemplo se a busca incluir \"jogo\".\nconst mockApiSearch = (query) => {\n  return new Promise((resolve) => {\n    setTimeout(() => { // Simula o atraso da rede\n      if (query.toLowerCase().includes('jogo')) {\n        resolve([sampleMovieData]); // API de busca geralmente retorna um array\n      } else {\n        resolve([]); // Retorna array vazio se não encontrar\n      }\n    }, 1000); // Atraso de 1 segundo\n  });\n};\n// --- FIM DA SIMULAÇÃO ---\n\nfunction App() {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searched, setSearched] = useState(false); // Para saber se uma busca já foi feita\n\n  const handleSearch = useCallback(async (query) => {\n    setIsLoading(true);\n    setError('');\n    setSearched(true);\n    setMovie(null);\n\n    // Constrói a URL da sua API de busca\n    const searchUrl = `https://sua-api.com/search?name=${encodeURIComponent(query)}`;\n\n    try {\n      const response = await fetch(searchUrl);\n      if (!response.ok) {\n        throw new Error('A resposta da rede não foi boa');\n      }\n      const data = await response.json();\n\n      // MUITO IMPORTANTE: Adapte essa linha para a estrutura da sua resposta.\n      // Se a API retornar um array, você pode pegar o primeiro item.\n      // Se retornar um objeto direto, pode ser apenas 'data'.\n      const results = data.results || (Array.isArray(data) ? data : [data]);\n\n      if (results.length > 0) {\n        setMovie(results[0]);\n      } else {\n        setMovie(null);\n      }\n    } catch (err) {\n      setError('Ocorreu um erro ao buscar o filme. Tente novamente.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main className=\"main-content\">\n        <SearchBar onSearch={handleSearch} />\n        <div className=\"results-container\">\n          {isLoading && <p className=\"status-message\">Carregando...</p>}\n          {error && <p className=\"status-message error\">{error}</p>}\n          {!isLoading && !error && searched && !movie && (\n            <p className=\"status-message\">Nenhum filme encontrado com esse nome.</p>\n          )}\n          {!isLoading && !error && !searched && (\n             <p className=\"status-message\">Comece buscando por um filme no campo acima. Tente \"Jogo de Amor em Las Vegas\"!</p>\n          )}\n          {movie && <MovieCard movie={movie} />}\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}